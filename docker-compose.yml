version: '3.6'
services:
  actuators:
    build:
      context: .
      dockerfile: ActuatorsDockerfile
    container_name: actuators
    networks:
      - backend
    expose:
      - 5000
    depends_on:
      - redis
      - postgres
    command: /usr/local/bin/gunicorn actuators.app:app -w 1 -t 90 -b 0.0.0.0:5000

  web:
    build:
      context: .
      dockerfile: FrontendDockerfile
    container_name: web
    depends_on:
      - actuators
    networks:
      - frontend
    expose:
      - 8008
    command: yarn start

  nginx:
    build:
      context: .
      dockerfile: NginxDockerFile
    container_name: nginx  
    ports:
      - 80:80
    networks:
      - backend
      - frontend
    depends_on:
      - actuators
      - web

  redis:
    image: redis:5.0.3-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    networks:
      - backend
    restart: always
    command: redis-server --appendonly yes

  postgres:
    build:
      context: .
      dockerfile: PostgresDockerFile
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      PGDATA: /data/postgres
#    volumes:
#       - postgres-data:/data/postgres
    ports:
      - 5432:5432
    networks:
      - backend
    restart: unless-stopped
  
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin4@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
       - pgadmin-data:/root/.pgadmin
    ports:
      - "${PGADMIN_PORT:-5050}:80"
    networks:
      - backend
    restart: unless-stopped

networks:
  frontend:
  backend:

volumes:
  redis_data:
  postgres-data:
  pgadmin-data: