version: '3.7'
services:
  web:
    build:
      dockerfile: WebDockerfile
    container_name: web
    expose:
      - 5000
    depends_on:
      - redis
      - postgres
    command: /usr/local/bin/gunicorn web.app:app -w 1 -t 90 -b 0.0.0.0:5000

  actuators:
    build:
      dockerfile: ActuatorsDockerfile
    container_name: actuators
    depends_on:
      - postgres
      - redis
    command: python -m actuators.app

  sensors:
    build:
      dockerfile: SensorsDockerfile
    container_name: sensors
    depends_on:
      - mosquitto
    command: python -m sensors.app

  frontend:
    build:
      dockerfile: FrontendDockerfile
    container_name: frontend
    depends_on:
      - web
    expose:
      - 8008
    command: yarn start

  nginx:
    image: nginx:latest
    container_name: nginx  
    ports:
      - 80:80
    volumes:
      - ./configs/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./frontend/404.html:/etc/nginx/
      - ./frontend/404.html:/usr/share/nginx/html/
    depends_on:
      - actuators
      - web

  redis:
    image: redis:5.0.3-alpine
    container_name: redis
    volumes:
      - redis_data:/data
    ports:
      - 6379:6379
    restart: always
    command: redis-server --appendonly yes

  postgres:
    image: "postgres:11.1-alpine"
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - ./psql_dump/: /docker-entrypoint-initdb.d
#       - postgres-data:/data/postgres
    ports:
      - 5432:5432
    restart: unless-stopped

  mosquitto:
    container_name: mosquitto
    image: eclipse-mosquitto
    expose:
      - 1883
      - 9001
    ports:
      - 1883:1883
      - 9001:9001
    volumes:
      - ./configs/mosquitto.conf:/mosquitto/config/mosquitto.conf

#  mongo-db:
#    image: mongo:3.6
#    hostname: mongo-db
#    container_name: db-mongo
#    expose:
#      - "27017"
#    ports:
#      - "27017:27017"
#    networks:
#      - backend
#    command: --bind_ip_all --smallfiles
#    volumes:
#      - mongo-data:/data

networks:
  default:
    driver: bridge

volumes:
  redis_data:
  postgres-data:
  #mongo-data: