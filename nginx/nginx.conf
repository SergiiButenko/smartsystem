server {
    listen 80 default_server;

    error_page 404 /404.html;

    access_log /var/log/nginx/main-access.log;
    error_log  /var/log/nginx/main-error.log error;

    gzip off;
    expires 30m;
    keepalive_timeout 70;

    client_max_body_size 128m;
    charset utf-8;

#    location / {
#      proxy_pass http://smartsystem-dev-www.s3-website.us-east-2.amazonaws.com/;
#      proxy_set_header Host smartsystem-dev-www.s3-website.us-east-2.amazonaws.com;
#      add_header 'Access-Control-Allow-Origin' "$http_origin" always;

#      add_header 'Access-Control-Allow-Credentials' 'true' always;
#      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
#      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
#      add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubdomains' always;
#      add_header 'X-Frame-Options' 'SAMEORIGIN' always;
#      add_header 'X-Content-Type-Options' 'nosniff' always;
#    }

    location /api/ {
      proxy_pass http://web:5000/;
      proxy_redirect off;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header 'Access-Control-Allow-Origin' "*" always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
      add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubdomains' always;
      add_header 'X-Frame-Options' 'DENY' always;
      add_header 'X-Content-Type-Options' 'nosniff' always;
    }

    location / {
      proxy_pass http://frontend:8008/;
      proxy_redirect off;

      proxy_set_header Host $http_host;
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;

      add_header 'Access-Control-Allow-Origin' "*" always;
      add_header 'Access-Control-Allow-Credentials' 'true' always;
      add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
      add_header 'Access-Control-Allow-Headers' 'Authorization,Accept,Origin,DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type' always;
      add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubdomains' always;
      add_header 'X-Frame-Options' 'DENY' always;
      add_header 'X-Content-Type-Options' 'nosniff' always;
    }

    # Requests for socket.io are passed on to Node on port 8000
    location ~* \.io {
          proxy_set_header X-Real-IP $remote_addr;
          proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header Host $http_host;
          proxy_set_header X-NginX-Proxy true;
          fastcgi_read_timeout 240;

          proxy_pass http://web:8000;
          proxy_redirect off;

          proxy_http_version 1.1;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
    }
}


